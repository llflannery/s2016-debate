import { ProjectReport, CompiledPage } from "../interfaces";
import { DependencyAssembler } from "./DependencyAssembler";
export declare class Lede {
    workingDir: any;
    compilers: any;
    deployers: any;
    logger: any;
    dependencyAssembler: DependencyAssembler;
    constructor(workingDir: any, compilers: any, deployers: any, logger: any);
    deploy(deployer: string, debug?: boolean, pr?: ProjectReport): Promise<ProjectReport>;
    static deployPage(deployer: any, projReport: ProjectReport, compiledPage: CompiledPage, logger: any): Promise<void>;
    static compilePage(compilers: any, proj: ProjectReport, logger: any): Promise<any>;
    static assembleDeps(workingDir: string, logger: any): Promise<ProjectReport>;
    static buildCache(proj: ProjectReport, logger: any): Promise<void>;
    static buildProject(logger: any, projectReport: ProjectReport | string | Promise<ProjectReport>): Promise<void>;
}
